services:

  app:
    container_name: portfolio-app
    image: django-app
    build:
      context: .
      dockerfile: .devcontainer/app/Dockerfile
    platform: linux/x86_64
    volumes:
      - ./app:/workspaces
      - ./app/static:/workspaces/static
    tty: true
    expose:
      - 8080
    ports:
      - "8000:8000"
    environment:
      - CONTAINER=Django-app
      - DEBUG=${DEBUG}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    networks:
      - frontend
      - backend
    depends_on:
      db:
        condition: service_healthy
    command: sh -c "/opt/entrypoint.sh"

  web:
    container_name: portfolio-web
    image: django-web
    build:
      context: .
      dockerfile: .devcontainer/web/Dockerfile
    platform: linux/x86_64
    volumes:
      - ./app/static:/workspaces/static
    tty: true
    ports:
      - "80:80"
    environment:
      - CONTAINER=Django-web
      - DEBUG=${DEBUG}
    networks:
      - frontend
    depends_on:
      - app
    command: sh -c "/opt/entrypoint.sh"

  db:
    container_name: portfolio-db
    image: django-db
    build:
      context: .
      dockerfile: .devcontainer/db/Dockerfile
    platform: linux/x86_64
    volumes:
      - ./db:/workspaces
    tty: true
    environment:
      - CONTAINER=Django-db
      - DEBUG=${DEBUG}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - PGDATA=${PGDATA}
    networks:
      - backend
    command: sh -c "/opt/entrypoint.sh"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 1s
      timeout: 5s
      retries: 10

networks:
  frontend:
    name: frontend
  backend:
    name: backend
